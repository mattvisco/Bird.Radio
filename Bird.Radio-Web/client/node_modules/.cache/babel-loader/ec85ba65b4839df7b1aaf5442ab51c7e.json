{"ast":null,"code":"import _regeneratorRuntime from \"/Users/M/Projects/Bird.Radio/Bird.Radio-CodeBase/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/M/Projects/Bird.Radio/Bird.Radio-CodeBase/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/M/Projects/Bird.Radio/Bird.Radio-CodeBase/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/M/Projects/Bird.Radio/Bird.Radio-CodeBase/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/M/Projects/Bird.Radio/Bird.Radio-CodeBase/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/M/Projects/Bird.Radio/Bird.Radio-CodeBase/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/M/Projects/Bird.Radio/Bird.Radio-CodeBase/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/M/Projects/Bird.Radio/Bird.Radio-CodeBase/client/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.scss';\nimport socketIOClient from 'socket.io-client';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: null,\n      response: false,\n      endpoint: \"http://localhost:5000\"\n    };\n    _this.callBackendAPI =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/test');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n              console.log('in');\n\n              if (!(response.status !== 200)) {\n                _context.next = 9;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 9:\n              return _context.abrupt(\"return\", body);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var endpoint = this.state.endpoint;\n      var socket = socketIOClient(endpoint);\n      socket.on('connection', function (socket) {\n        console.log('a user connected');\n        socket.on('disconnect', function () {\n          console.log('user disconnected');\n        });\n      }); // Call our fetch function below once the component mounts\n\n      this.callBackendAPI().then(function (res) {\n        return _this2.setState({\n          data: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Welcome to React\")), React.createElement(\"p\", {\n        className: \"App-intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.state.data));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/M/Projects/Bird.Radio/Bird.Radio-CodeBase/client/src/App.js"],"names":["React","Component","socketIOClient","App","state","data","response","endpoint","callBackendAPI","fetch","json","body","console","log","status","Error","message","socket","on","then","res","setState","express","catch","err","logo"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,YAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;IAEMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,QAAQ,EAAE,KAFJ;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,K;UAuBRC,c;;;;6BAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQC,KAAK,CAAC,OAAD,CADb;;AAAA;AACTH,cAAAA,QADS;AAAA;AAAA,qBAEIA,QAAQ,CAACI,IAAT,EAFJ;;AAAA;AAETC,cAAAA,IAFS;AAGfC,cAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AAHe,oBAKXP,QAAQ,CAACQ,MAAT,KAAoB,GALT;AAAA;AAAA;AAAA;;AAAA,oBAMPC,KAAK,CAACJ,IAAI,CAACK,OAAN,CANE;;AAAA;AAAA,+CAQRL,IARQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;wCAjBG;AAAA;;AAAA,UACVJ,QADU,GACG,KAAKH,KADR,CACVG,QADU;AAElB,UAAMU,MAAM,GAAGf,cAAc,CAACK,QAAD,CAA7B;AACAU,MAAAA,MAAM,CAACC,EAAP,CAAU,YAAV,EAAwB,UAASD,MAAT,EAAgB;AACtCL,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAI,QAAAA,MAAM,CAACC,EAAP,CAAU,YAAV,EAAwB,YAAU;AAChCN,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,SAFD;AAGD,OALD,EAHkB,CAUlB;;AACA,WAAKL,cAAL,GACGW,IADH,CACQ,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEhB,UAAAA,IAAI,EAAEe,GAAG,CAACE;AAAZ,SAAd,CAAJ;AAAA,OADX,EAEGC,KAFH,CAES,UAAAC,GAAG;AAAA,eAAIZ,OAAO,CAACC,GAAR,CAAYW,GAAZ,CAAJ;AAAA,OAFZ;AAGD,K,CAED;;;;6BAYS;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEC,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,CADF,EAKE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B,KAAKrB,KAAL,CAAWC,IAArC,CALF,CADF;AASD;;;;EA9CeJ,S;;AAiDlB,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport socketIOClient from 'socket.io-client';\n\nclass App extends Component {\n\n  state = {\n    data: null,\n    response: false,\n    endpoint: \"http://localhost:5000\"\n  };\n\n  componentDidMount() {\n    const { endpoint } = this.state;\n    const socket = socketIOClient(endpoint);\n    socket.on('connection', function(socket){\n      console.log('a user connected');\n      socket.on('disconnect', function(){\n        console.log('user disconnected');\n      });\n    });\n\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('/test');\n    const body = await response.json();\n    console.log('in')\n\n    if (response.status !== 200) {\n      throw Error(body.message)\n    }\n    return body;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Welcome to React</h1>\n        </header>\n        <p className=\"App-intro\">{this.state.data}</p>\n      </div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}